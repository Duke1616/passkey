// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/Duke1616/passkey/cmd/app"
	"github.com/Duke1616/passkey/internal/repository"
	"github.com/Duke1616/passkey/internal/repository/cache"
	"github.com/Duke1616/passkey/internal/repository/dao"
	"github.com/Duke1616/passkey/internal/service"
	"github.com/Duke1616/passkey/internal/web"
	"github.com/Duke1616/passkey/ioc"
)

// Injectors from wire.go:

func InitWebServer() *app.App {
	v := ioc.InitGinMiddlewares()
	userHandler := web.NewUserHandler()
	logger := ioc.InitLoggerSlog()
	serviceService := ioc.InitWebauthn()
	db := ioc.InitDB()
	userDAO := dao.NewUserDAO(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewCachedUserRepository(userDAO, userCache)
	userService := service.NewUserService(userRepository)
	webauthnHandler := web.NewWebauthnHandler(logger, serviceService, userService)
	engine := ioc.InitWebServer(v, userHandler, webauthnHandler)
	appApp := &app.App{
		Web: engine,
	}
	return appApp
}
